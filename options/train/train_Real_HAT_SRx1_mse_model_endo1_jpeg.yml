# general settings
name: train_Real_HAT_SRx1_mse_model_endo1_jpeg
model_type: RealHATMSEModel
scale: 1
num_gpu: auto
manual_seed: 0

# ----------------- options for synthesizing training data in RealESRNetModel ----------------- #
gt_usm: True  # USM the ground-truth

# the first degradation process
resize_prob: [0.0, 0.0, 1.0]  # up, down, keep
resize_range: [0.9, 1.1]
gaussian_noise_prob: 0.0
noise_range: [1, 2]
poisson_scale_range: [0.01, 0.02]
gray_noise_prob: 0.0
jpeg_range: [30, 95]

# the second degradation process
second_blur_prob: 0.0
resize_prob2: [0.0, 0.0, 1.0]  # up, down, keep
resize_range2: [0.9, 1.1]
gaussian_noise_prob2: 0.0
noise_range2: [1, 2]
poisson_scale_range2: [0.01, 0.02]
gray_noise_prob2: 0.0
jpeg_range2: [30, 95]

gt_size: 128
queue_size: 180

# dataset and data loader settings
datasets:
  train:
    name: endo1
    type: RealESRGANDataset
    dataroot_gt: datasets/train
    meta_info_file: datasets/eta_info/meta_info_endo1.txt
    io_backend:
      type: disk

    blur_kernel_size: 1
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.0
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 1
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.0
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.0

    gt_size: 128
    use_hflip: True
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
    name: validation
    type: PairedImageDataset
    dataroot_gt: datasets/test/lq
    dataroot_lq: datasets/test/lq
    io_backend:
      type: disk

# network structures
network_g:
  type: HAT
  upscale: 1
  in_chans: 3
  img_size: 64
  window_size: 16
  compress_ratio: 24
  squeeze_factor: 24
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 144
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [10000,20000,30000,40000]
    gamma: 0.5

  total_iter: 40000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# Uncomment these for validation
# validation settings
val:
  val_freq: !!float 1e4
  save_img: True
  pbar: False

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true
      better: higher  # the higher, the better. Default: higher
    ssim:
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true
      better: higher  # the higher, the better. Default: higher

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
